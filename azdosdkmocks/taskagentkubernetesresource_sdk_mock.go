// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/microsoft/terraform-provider-azuredevops/azdosdk/taskagentkubernetesresource (interfaces: Client)

// Package azdosdkmocks is a generated GoMock package.
package azdosdkmocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	taskagent "github.com/microsoft/azure-devops-go-api/azuredevops/v7/taskagent"
	taskagentkubernetesresource "github.com/microsoft/terraform-provider-azuredevops/azdosdk/taskagentkubernetesresource"
)

// MockTaskagentkubernetesresourceClient is a mock of Client interface.
type MockTaskagentkubernetesresourceClient struct {
	ctrl     *gomock.Controller
	recorder *MockTaskagentkubernetesresourceClientMockRecorder
}

// MockTaskagentkubernetesresourceClientMockRecorder is the mock recorder for MockTaskagentkubernetesresourceClient.
type MockTaskagentkubernetesresourceClientMockRecorder struct {
	mock *MockTaskagentkubernetesresourceClient
}

// NewMockTaskagentkubernetesresourceClient creates a new mock instance.
func NewMockTaskagentkubernetesresourceClient(ctrl *gomock.Controller) *MockTaskagentkubernetesresourceClient {
	mock := &MockTaskagentkubernetesresourceClient{ctrl: ctrl}
	mock.recorder = &MockTaskagentkubernetesresourceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskagentkubernetesresourceClient) EXPECT() *MockTaskagentkubernetesresourceClientMockRecorder {
	return m.recorder
}

// AddKubernetesResource mocks base method.
func (m *MockTaskagentkubernetesresourceClient) AddKubernetesResource(arg0 context.Context, arg1 taskagentkubernetesresource.AddKubernetesResourceArgs) (*taskagent.KubernetesResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddKubernetesResource", arg0, arg1)
	ret0, _ := ret[0].(*taskagent.KubernetesResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddKubernetesResource indicates an expected call of AddKubernetesResource.
func (mr *MockTaskagentkubernetesresourceClientMockRecorder) AddKubernetesResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddKubernetesResource", reflect.TypeOf((*MockTaskagentkubernetesresourceClient)(nil).AddKubernetesResource), arg0, arg1)
}
